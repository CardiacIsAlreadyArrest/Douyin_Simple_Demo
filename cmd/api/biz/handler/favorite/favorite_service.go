// Code generated by hertz generator.

package favorite

import (
	"context"
	"github.com/Yra-A/Douyin_Simple_Demo/cmd/api/biz/handler"
	"github.com/Yra-A/Douyin_Simple_Demo/pkg/errno"

	"log"

	hfavorite "github.com/Yra-A/Douyin_Simple_Demo/cmd/api/biz/model/favorite"
	"github.com/Yra-A/Douyin_Simple_Demo/cmd/api/rpc"
	kfavorite "github.com/Yra-A/Douyin_Simple_Demo/kitex_gen/favorite"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// FavoriteAction .
// @router /douyin/favorite/action/ [POST]
func FavoriteAction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req hfavorite.FavoriteActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	if user_id, exist := c.Get("current_user_id"); exist {
		req.UserID = user_id.(int64)
	} else {
		handler.BadResponse(c, errno.AuthorizationFailedErr)
		return
	}

	resp, err := rpc.FavoriteAction(context.Background(), &kfavorite.FavoriteActionRequest{
		UserId:     req.UserID,
		VideoId:    req.VideoID,
		ActionType: req.ActionType,
		Token:      req.Token,
	})
	if err != nil {
		c.String(consts.StatusInternalServerError, err.Error())
		return
	}

	c.JSON(consts.StatusOK, resp)
}

// FavoriteList .
// @router /douyin/favorite/list/ [GET]
func FavoriteList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req hfavorite.FavoriteListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	uid := int64(0)
	if user_id, exist := c.Get("current_user_id"); exist {
		req.UserID = user_id.(int64)
	} else {
		handler.BadResponse(c, errno.AuthorizationFailedErr)
		return
	}
	log.Println("[ypx debug] favorite favorite UserId", uid)
	resp, err := rpc.FavoriteList(context.Background(), &kfavorite.FavoriteListRequest{
		UserId: req.UserID,
		Token:  req.Token,
	})
	if err != nil {
		c.String(consts.StatusInternalServerError, err.Error())
		return
	}

	c.JSON(consts.StatusOK, resp)
}
